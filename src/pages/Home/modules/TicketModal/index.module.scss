@import 'scss/config';

.block {
  @include scroll;
  @include make-spacer(p, 2);

  display: grid;
  position: fixed;
  inset: 0;
  z-index: $z-index-14;
  background-color: var(--color-background);

  @media (max-width: $min) {
    @include make-spacer(p, 1);

    top: $nav;
    bottom: $footer;
    height: unset;
    overflow: hidden;
  }
}

.overflow {
  @include flex(center, center);

  @media (max-width: $min) {
    overflow-x: hidden;
  }
}

.content {
  @include wrapper;

  min-width: rem(600px);
  color: var(--color-white);
  place-items: center;

  @media (max-width: $min) {
    @include size(100%);
    @include scroll;

    min-width: auto;
  }
}

.wrapper {
  @include make-spacer(mb, 4);

  &:last-child {
    @include make-spacer(mb, 0);
  }
}

.header {
  @include flex(space-between, center);
  @include make-spacer(pl, 4);
  @include make-spacer(pr, 1);
  @include size(100%, rem(40px));

  font-size: rem(14px);
  font-weight: var(--typography-bold);
  text-transform: uppercase;
  background-color: var(--color-orange-900);

  @media (max-width: $min) {
    @include make-spacer(px, 1);

    height: rem(30px);
    font-size: rem(12px);
  }
}

.footer {
  @include flex(flex-end);
  @include make-spacer(p, 1);

  gap: rem(5px);
  border-top: rem(1px) solid var(--color-border);
}

.body {
  @include make-spacer(p, 4);

  position: relative;
  min-height: rem(150px);

  @media (max-width: $min) {
    @include make-spacer(p, 1);

    overflow-x: auto;
  }
}

.form {
  @include flex($align-items: center);

  gap: rem(5px);
}

.field {
  @include field;

  height: rem(38px);

  @media (max-width: $min) {
    height: rem(30px);
    font-size: rem(12px);
    background-size: rem(20px);
  }
}

.action {
  @include size(rem(40px));

  flex-shrink: 0;

  @media (max-width: $min) {
    @include size(rem(30px));
  }
}

.title {
  @include flex(space-between, center);
  @include make-spacer(mb, 4);

  @media (max-width: $min) {
    @include make-spacer(mb, 1);

    font-size: rem(12px);
  }
}

.table {
  border: rem(1px) solid var(--color-border);
  border-radius: var(--border-radius);
  overflow: hidden;

  &.sm {

    .row {
      grid-template-columns: repeat(4, 1fr);

      @media (max-width: $min) {
        @include make-spacer(py, 0);

        grid-template-columns: repeat(2, 1fr);
      }
    }

    .cell {
      @media (max-width: $min) {
        min-height: rem(30px);

        &:nth-child(1),
        &:nth-child(2) {
          border-bottom: rem(1px) solid var(--color-border);
        }
      }
    }
  }

  &.lg {
    @media (max-width: $min) {
      min-width: rem(700px);
    }

    .row {
      grid-template-columns: rem(80px) rem(100px) repeat(3, 1fr) rem(80px) rem(100px);
    }
  }

  &.single {
    @media (max-width: $min) {
      min-width: rem(700px);
    }

    .row {
      grid-template-columns: rem(80px) 1fr 1fr repeat(4, 100px);

      @media (max-width: $min) {
        grid-template-columns: rem(60px) 2fr 1fr repeat(4, rem(80px));
      }
    }
  }

  &.system {
    @media (max-width: $min) {
      min-width: rem(700px);
    }

    .row {
      grid-template-columns: rem(80px) 1fr 1fr repeat(3, 100px);

      @media (max-width: $min) {
        grid-template-columns: rem(80px) 1fr 1fr repeat(3, 80px);
      }
    }
  }

  &.center {

    .cell {
      justify-content: center;
      text-align: center;
    }
  }
}

.row {
  @include make-spacer(px, 4);
  @include make-spacer(py, 1);

  display: grid;
  align-items: center;
  min-height: rem(35px);
  border-top: rem(1px) solid var(--color-border);
  column-gap: rem(10px);

  @media (max-width: $min) {
    @include make-spacer(px, 1);

    font-size: rem(12px);
    column-gap: 0;
  }

  &:nth-child(even) {
    background-color: var(--color-thunder);
  }

  &:nth-child(odd) {
    background-color: var(--color-mine-shaft);
  }

  &:first-child {
    border-top: 0;
  }

  &.head {
    font-size: rem(10px);
    font-weight: var(--typography-bold);
    text-transform: uppercase;
  }
}

.cell {
  @include flex($align-items: center);

  gap: rem(5px);

  &.left {
    justify-content: flex-start !important;

    @media (max-width: $min) {
      flex-wrap: wrap;
    }
  }
}

.scoreboard {
  @include make-spacer(mr, 2);
  @include make-spacer(px, 1);
  @include flex($align-items: center);

  height: rem(25px);
  border: rem(1px) solid var(--color-border);
  border-radius: var(--border-radius);
  font-weight: var(--typography-bold);
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  background-color: var(--color-mine-shaft);

  @media (max-width: $min) {
    @include make-spacer(mr, 0);

    flex-shrink: 0;
  }
}

.icon {
  @include make-spacer(mr, 2);
  @include size(rem(20px));

  @media (max-width: $min) {
    @include make-spacer(mr, 1);
  }
}

.option {
  @include size(rem(64px));

  flex-shrink: 0;

  @media (max-width: $min) {
    @include size(rem(30px) !important);
  }
}

.close {
  @include size(rem(35px));

  @media (max-width: $min) {
    @include size(rem(25px));
  }
}

.score {
  display: grid;
  position: relative;
  grid-template-columns: repeat(2, 1fr);
  gap: rem(25px);
  width: 100%;

  @media (max-width: $min) {
    gap: rem(5px);
  }

  span {

    &:nth-child(1) {
      text-align: right;

      &::before {
        @include absolute-center;

        content: '-';
      }
    }

    &:nth-child(2) {
      text-align: left;
    }
  }
}

.status {
  @include size(rem(10px), rem(25px));
  @include make-spacer(ml, 0);
  @include make-spacer(mr, 2);

  border: rem(1px) solid var(--color-border);

  &.system_cancelled,
  &.cancelled {
    background-color: var(--color-orange-900);
  }

  &.win {
    background-color: var(--color-green);
  }

  &.lost {
    background-color: var(--color-red);
  }

  @media (max-width: $min) {
    @include make-spacer(mr, 1);
    @include size(rem(5px), rem(20px));
  }
}

.state {
  @include size(rem(446px), rem(150px));

  display: none;
  position: absolute;
  top: rem(150px);
  left: rem(50px);
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: contain;
  transform: rotateZ(-20deg);

  &.system_cancelled,
  &.cancelled,
  &.paid {
    display: block;
  }
}
