@import 'scss/config';

.block {
  @include wrapper;
  @include flex(center, center, column);

  width: 100%;
  padding: rem(26px) rem(8px);
  background-color: var(--color-heavy-metal);

  @media (max-width: $min) {
    @include make-spacer(px, 1);
    @include make-spacer(py, 2);

    flex-direction: column-reverse;
  }
}

.body {
  @include make-spacer(mx, auto);
  @include make-spacer(mb, 10);

  @media (max-width: $min) {
    @include make-spacer(mb, 0);
    @include make-spacer(mt, 1);
    @include flex($direction: row-reverse);

    max-width: rem(319px);
  }
}

.footer {
  display: grid;
  grid-template-columns: repeat(2, auto);
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.top,
.middle,
.bottom {
  display: grid;
  position: relative;
  grid-template-columns: rem(55px) rem(845px) rem(55px);
  width: fit-content;

  @media (max-width: $min) {
    grid-template-rows: rem(40px) auto rem(40px);
    gap: rem(5px);
    grid-template-columns: unset;
  }
}

.top,
.bottom {
  height: rem(55px);
  padding: 0 rem(2px);

  @media (max-width: $min) {
    @include make-spacer(p, 0);
    @include size(rem(40px), auto);

    flex-shrink: 0;
  }

  .button {
    @media (max-width: $min) {
      writing-mode: vertical-rl;
    }
  }
}

.hidden-zero {
  @include flex($direction: column);

  position: absolute;
  top: rem(20px);
  bottom: rem(-17px);
  left: rem(32px);
  z-index: 3;
  width: rem(45px);

  @media (max-width: $min) {
    @include size(unset, rem(50px));

    top: rem(30px);
    right: rem(20px);
    left: rem(-20px);
    flex: 1;
    height: rem(30px);
    flex-direction: row-reverse;
  }

  .button {
    flex: 1;
    border-radius: 0;
    overflow: visible;

    &::after {
      display: none;
    }
  }
}

.hidden-chips {
  @include flex($justify-content: space-between, $direction: column);

  position: absolute;
  top: rem(20px);
  right: rem(75px);
  bottom: rem(-18px);
  left: rem(75px);
  z-index: 2;
  padding: rem(5px) 0;

  @media (max-width: $min) {
    @include make-spacer(p, 0);

    top: rem(20px);
    right: rem(25px);
    bottom: rem(70px);
    left: rem(-20px);
    flex-direction: row-reverse;
  }

  .button {
    position: relative;
  }
}

.h-row {
  display: grid;
  justify-content: space-between;
  align-items: center;
  height: rem(30px);

  @media (max-width: $min) {
    @include flex($direction: column);

    height: 100%;
  }

  .button {
    @include size(100%);

    border-radius: 0;
    overflow: visible;

    &::after {
      display: none;
    }
  }

  &:nth-child(odd) {
    grid-template-columns: repeat(34, rem(30px));
    gap: rem(5px);
    padding: 0 rem(2px);

    @media (max-width: $min) {
      grid-template-columns: repeat(34, rem(40px));
      flex: 1;
      margin-top: rem(40px);
    }

    .button {
      position: relative;

      &:nth-child(odd) {
        @include flex(center, center);
        @include size(rem(60px));

        transform: translate(rem(-15px), rem(-15px));

        @media (max-width: $min) {
          @include size(100%, rem(40px));

          transform: translate(0, rem(-15px));
        }
      }

      &:nth-child(even) {
        margin-top: rem(-30px);

        @media (max-width: $min) {
          margin-top: rem(-35px);
          height: rem(25px);
        }
      }
    }
  }

  &:nth-child(even) {
    grid-template-columns: repeat(23, rem(30px));
    padding: 0 rem(2px);

    @media (max-width: $min) {
      @include size(rem(45px), auto);

      width: rem(45px);
      padding-top: rem(32px);
      margin-bottom: rem(-15px);
      height: auto;
    }

    .button {

      @media (max-width: $min) {
        flex: 1;
        height: auto;
      }
    }
  }
}

.dozens,
.extra,
.rows {

  .button {
    flex: 1;
    border: rem(2px) solid var(--color-white);
    background-color: var(--color-thunder);

    @media (max-width: $min) {
      border-width: rem(1px);
    }
  }
}

.dozens,
.extra {
  @include flex;
  @include size(100%);

  gap: rem(6px);
  padding: 0 rem(7px) 0 rem(3px);

  @media (max-width: $min) {
    @include make-spacer(p, 0);

    flex-direction: column;
  }
}

.dozens {

  .button {
    font-size: rem(28px);

    @media (max-width: $min) {
      font-size: rem(16px);
    }
  }
}

.extra {

  .button {
    font-size: rem(24px);

    @media (max-width: $min) {
      font-size: rem(16px);
    }
  }
}

.rows {
  @include flex($direction: column-reverse);
  @include size(100%);

  gap: rem(8px);
  padding: rem(5px) 0;

  @media (max-width: $min) {
    @include make-spacer(py, 0);
    @include make-spacer(px, 1);

    flex-direction: row;
    height: rem(40px);
  }

  .button {
    flex-direction: column;
    font-size: rem(24px);

    @media (max-width: $min) {
      font-size: rem(14px);
    }

  }
}

.zero {
  @include flex;
  @include size(100%);

  padding: rem(6px) 0 rem(5px);

  @media (max-width: $min) {
    @include make-spacer(py, 0);
    @include make-spacer(px, 1);
  }

  .button {
    flex: 1;
    border: rem(2px) solid var(--color-green-900);
    font-size: rem(28px);

    @media (max-width: $min) {
      border-width: rem(1px);
    }

    &::before {
      position: absolute;
      top: rem(1px);
      right: rem(1px);
      left: rem(1px);
      height: rem(12px);
      border-radius: rem(inherit);
      background: linear-gradient(180deg, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.1) 100%);
      content: '';
    }

    &.hover {

      &::after {
        opacity: 1;
      }
    }
  }
}

.numbers {
  @include flex(space-between, center, column-reverse, wrap);
  @include size(100%, rem(226px));
  @include make-spacer(p, 1);

  z-index: 0;
  gap: rem(5px);

  @media (max-width: $min) {
    @include make-spacer(py, 0);

    flex-direction: row;
    height: 100%;
  }

  .button {
    @include size(rem(65px), rem(67px));

    flex-shrink: 0;
    border: rem(2px) solid var(--color-black);
    font-size: rem(28px);
    color: var(--color-white);
    box-shadow: 0 rem(2px) rem(2px) rgba(255, 255, 255, 0.14);

    @media (max-width: $min) {
      flex: 1 1 30%;
      height: rem(40px);
      min-height: unset;
      font-size: rem(20px);
      box-shadow: none;
    }

    &::before {
      position: absolute;
      top: rem(1px);
      right: rem(1px);
      left: rem(1px);
      height: rem(12px);
      border-radius: rem(inherit);
      background: linear-gradient(180deg, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.1) 100%);
      content: '';
    }

    &.black {
      background-image: linear-gradient(0deg, #2a2a2a 0%, #0d0d0d 7%, #111 50%, #0d0d0d 100%);
    }

    &.red {
      background-image: linear-gradient(0deg, #111 0%, #9f0021 17%, #c91e37 52%, #c91e37 100%);
    }

    &.hover {

      &::after {
        opacity: 1;
      }
    }
  }
}

.button {
  @include flex(center, center);

  position: relative;
  border-radius: rem(9px);
  overflow: hidden;
  cursor: pointer;

  @media (max-width: $min) {
    border-radius: rem(3px);
  }

  &::after {
    @include absolute-filled;

    background-color: rgba(255, 255, 255, 0.6);
    opacity: 0;
    content: '';
    transition: var(--default-transition);
  }

  button {
    font-size: rem(24px);
    font-weight: var(--typography-bold);
    text-align: center;
    text-transform: uppercase;
    color: var(--color-white);
  }

  &:hover {

    &::after {
      opacity: 1;
    }
  }
}

.actions {
  display: grid;
  grid-template-columns: repeat(2, rem(64px));
  gap: rem(10px);
  justify-content: center;

  @media (max-width: $min) {
    grid-template-columns: repeat(2, rem(40px));
    gap: rem(5px);
  }

  button {
    font-size: rem(36px);

    @media (max-width: $min) {
      @include size(rem(40px!important));

      min-height: auto;
      font-size: rem(18px);
    }
  }
}

.coins {
  @include flex(center, center);

  gap: rem(10px);
  height: rem(94px);

  @media (max-width: $min) {
    height: rem(50px);
    gap: rem(5px);
  }
}

.coin {
  @include flex(center, center);
  @include size(rem(64px));

  position: relative;
  border-radius: 50%;
  font-size: rem(24px);
  font-weight: var(--typography-bold);
  letter-spacing: rem(-2px);
  color: var(--color-white);

  @media (max-width: $min) {
    @include size(rem(50px));

    font-size: rem(16px);
  }

  img {
    @include absolute-filled;
  }

  p {
    position: relative;
  }

  &.active {
    @include size(rem(94px));

    font-size: rem(36px);
    transform: rotateZ(360deg);
    transition: var(--default-transition);

    @media (max-width: $min) {
      @include size(rem(55px));

      font-size: rem(18px);
    }
  }
}
